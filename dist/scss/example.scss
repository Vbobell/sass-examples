//Variables in to SASS is much util for reuse the CSS rule value.
//For declare variable utilize prefix $ and your name, after declare, define the value.

//Box rules
    //width
        $width-1: 8.33%;
        $width-2: 16.66%;
        $width-3: 25%;
        $width-12: 100%;
    //width
    //padding
        $padding-1: 0.5em; 
    //padding
    //margin
        $not-margin: 0;
    //margin
//Box rules

//Background rules
    //Bg colors
        $primary-bg-color: #eeeeee;
        $secundary-bg-color: #620671;
        $ternary-bg-color: #ffffff;
    //Bg colors
//Background rules

//Text rules
    // Font color
        $primary-color: #222222;
        $secundary-color: #eeeeee;
        $link-primary-color: #620671;
        $link-hover-primary-color: #542424;
    // Font color
//Text rules
// Mixin are declaration group the rules code, is easy it's reutilize and help economize codes.
@mixin border-define($size, $type, $color, $radius) {
    border: $size $type $color;
    border-radius: $radius;
}

@mixin box-shadow-define($rule) {
    -webkit-box-shadow: $rule;
    -moz-box-shadow: $rule;
    box-shadow: $rule;
}
// To use variable utilize prefix $ and name declared.
body {
    margin: $not-margin;
}
header, 
footer {
    background-color: $primary-bg-color;
}
section {
    padding: $padding-1;
    background-color: $secundary-bg-color;
    color: $secundary-color;
}

div {
    padding: $padding-1;
    background-color: $ternary-bg-color;
    color: $primary-color;
}
// In to example is utilized nested rules, that are rules into another rule.

#page {
    display: grid;
    grid-template-columns: $width-12;
    
    #header {
        padding: $padding-1;
    }

    #main {
        display: flex;
    }

    #footer {
        padding: $padding-1;
    }
}
// To use mixin use property @include and name declared, if there parameters, declare between ().
.container {
    display: flex;
    justify-content: space-evenly;
    width: $width-12;
    @include border-define(2px, solid, #eeeeee, 0px);
}

.container .item {
    width: $width-12;
    @include box-shadow-define(0px 0px 15px 0px rgba(0,0,0,0.52));
}

@media all and (min-width:992px) {
    .container .item {
        width: $width-3;
    }
}